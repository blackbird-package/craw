#!/bin/bash


## CRAW KEY LUKS DRIVE ENCRYPTION
## development by null
## copyright@2025 PT LEKTOR MEDIA UTAMA


clear
echo "-------------------------------------------------"
echo " Craw : Crypto Vault Manager"
echo " development by null@2025"
echo "-------------------------------------------------"


ringgrups=$( sudo lvs | grep "ring" | awk $'{ print $2 }')
ringparse="/dev/$ringgrups/ring"

silogrups=$( sudo lvs | grep "silo" | awk $'{ print $2 }')
siloparse="/dev/$silogrups/silo"


function craw_open_ring_device() {

    echo " DECRYPT : Insert crypto keys volume password"
    echo "-------------------------------------------------"
    sudo cryptsetup luksOpen $ringparse lvm_ring

    if [[ ! -d "$HOME/.ssh"  ]];then
        sudo mkdir -R -p "$HOME/.ssh"
        sudo chmod -R 700 "$HOME/.ssh"
    fi
    
    sudo mount /dev/mapper/lvm_ring "$HOME/.ssh"
    sudo chown -R $USER:$USER "$HOME/.ssh"
}


function craw_exit_ring_device() {

    echo " ENCRYPT : Encrypting crypto keys volume"
    echo "-------------------------------------------------"

    mountar=$(lsblk | grep "$HOME/.ssh")
    mountsc="/dev/mapper/lvm_ring"

    if [[ ! -z $mounted ]] || [[ -e $mountsc ]];then
        cd ~ && sudo umount -R "$HOME/.ssh"
        sudo cryptsetup luksClose /dev/mapper/lvm_ring
    fi
}


function craw_ring_init() {

    if [[ -e $ringparse ]];then
        if [[ ! -e "/dev/mapper/lvm_ring" ]];then
            craw_open_ring_device
        else
            craw_exit_ring_device
        fi
    fi
}


function craw_open_silo_device() {

    echo " DECRYPT : Insert cryto silo volume password"
    echo "-------------------------------------------------"
    sudo cryptsetup luksOpen $siloparse lvm_silo

    sudo mount -m /dev/mapper/lvm_silo "/run/user/$UID/silo"
    sudo chown -R $USER:$USER "/run/user/$UID/silo"

    if [[ -e "$HOME/silo" ]];then
        rm "$HOME/silo"
    fi

    ln -s "/run/user/$UID/silo" "$HOME/silo"
}


function craw_exit_silo_device() {

    echo " ENCRYPT : Encrypting crypto silo volume"
    echo "-------------------------------------------------"

    mountsc="/dev/mapper/lvm_silo"

    if [[ ! -z $mounted ]] || [[ -e $mountsc ]];then
        cd ~ && 
        rm "$HOME/silo"
        sudo chown -R root:root "/run/user/$UID/silo" &&
        sudo umount "/run/user/$UID/silo" &&
        sudo cryptsetup luksClose /dev/mapper/lvm_silo
    fi
}


function craw_silo_init() {
    if [[ -e $siloparse ]];then
        if [[ ! -e "/dev/mapper/lvm_silo" ]];then
            craw_open_silo_device
        else
            craw_exit_silo_device
        fi
    fi
}


function craw_sync_init() {

    if [[ ! -e "/dev/mapper/lvm_ring" ]];then
        craw_open_ring_device
        echo "[Info] : keys crypto volume is ready."
    fi

    if [[ ! -e "/dev/mapper/lvm_silo" ]];then
        craw_open_silo_device
        echo "[Info] : silo crypto volume is ready."
    fi

    echo "[Info] : prepare to backup keys volume crypto."
    mkdir -p "$HOME/silo/keys"
    
    cp -fr "$HOME/.ssh/"* "$HOME/silo/keys/"
    echo "[Info] : backup keys volume crypto finised."   
}


function craw_sync_exit() {

    read -p "Do you want to close all crypto volume ? : [Y/n] " CRAWCLOSEALL

    if [[ $CRAWCLOSEALL = "Y" ]] || [[ $CRAWCLOSEALL = "y" ]];then
        echo "[Info] : Encrypt silo volume crypto."
        craw_exit_silo_device

        echo "[Info] : Encrypt keys volume crypto."
        craw_exit_ring_device
    fi
}


if [[ $1 == "keys" ]] && [[ ! -z $1 ]];then

    craw_ring_init

elif [[ $1 == "silo" ]] && [[ ! -z $1 ]];then

    craw_silo_init

elif [[ $1 == "all" ]] && [[ ! -z $1 ]];then

    craw_ring_init
    craw_silo_init

elif [[ $1 == "sync" ]] && [[ ! -z $1 ]];then

    craw_sync_init
    craw_sync_exit

else

    echo "Error : command need parameter or paramenter its not available"
fi